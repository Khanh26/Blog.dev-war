name: Deploy to Dev

on:
  push:
    branches:
      - 'main'

env:
  php_version: '8.1'
  pantheon_env: 'dev'
  pantheon_repo: ${{ secrets.PANTHEON_REPO }}

jobs:
  deploy:
    name: Deploy to Pantheon Dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          php-version: ${{ env.php_version }}

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Get Composer cache directory
        id: composer-cache-dir
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@3
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Avoid GitHub rate limit for Composer
        run: composer config -g github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}

      - name: Composer install
        run: composer install --no-dev --no-interaction --no-progress

      - name: Place SSH key
        uses: shimataro/ssh-key-action@v2 # v2.1.0
        with:
          key: ${{ secrets.PANTHEON_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Prepare code for deployment
        run: |
          git config --global user.email "trongkhanh2014@gmail.com"
          git config --global user.name "Github actions"
          commit_message=$(git log -1 --pretty=%B)
          rm -rf .git
          git init
          git config pull.rebase true
          git add .
          git commit -m "Automated deploy: $commit_message" >/dev/null
          
      - name: Push code to Pantheon Dev
        run: |
          git remote add patheon ${{ secrets.PANTHEON_REPO }}
          git pull patheon master
          git push patheon master
      # There is no easy way to know when the code has actually synced to the Pantheon environment so we can't reliably
      # run Drush commands immediately after pushing code. Thus, we run database updates, import config, and disable
      # maintenance mode using Pantheon's Quicksilver scripting (see web/private/quicksilver/sync_code.php referenced by
      # pantheon.yml).
